{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Research writing is increasingly a team effort; often multiple people contribute to different manuscript parts. This follows corrections, additions and revisions at different stages. So, a version control system like <code>git</code> could simplify the process at many levels.</p> <p>This documentation aims to provide a brief yet complete account of integrating LaTex with Git. In addition, when the project is integrated with github, it provides seamless collaboration and cloud-syncing.</p>"},{"location":"#outline","title":"Outline","text":"<p>There are three parts to the documentation. Part one focuses on introduction to LaTeX and its installation. The second part focuses on preparing a manuscript with LaTeX. It introduces the preamble, sections and other options in detail. The final part discusses the integration of LaTeX with Git and Github. A template file is available within this repository, and you can use it from the header link.</p>"},{"location":"#part-1","title":"Part - 1","text":"<ol> <li>Why LaTex, Git and Github?</li> <li>Installation</li> <li>Editor</li> </ol>"},{"location":"#part-2","title":"Part -2","text":"<ol> <li>Manuscript Structure</li> <li>Preamble and Sections</li> <li>Tables and Figures</li> <li>Equations and Inline Math </li> <li>References</li> </ol>"},{"location":"#part-3","title":"Part -3","text":"<ol> <li>Configuring git and github</li> <li>Tracking Changes</li> <li>Branches</li> </ol>"},{"location":"01_why-latex/","title":"Why LaTeX? And what is Git and Github?","text":""},{"location":"01_why-latex/#why-latex","title":"Why LaTeX?","text":"<p>LaTeX is a text processing software. You might have used Word or similar kind of package already. In which, you type and format the manuscript by yourself. Such editors are termed as What You See Is What You Get (WYSIWYG). Instead, in LaTeX, you often tell the compiler how you wish to see the document and give your marked text as input. The software then compiles it and give you the final output, often in the form of PDF.</p> <p>Such process may seems complicated. However, once you setup your template and familiar on how to markup the things, using LaTeX is very convenient. Especially, when you handle large documents like a thesis. Further, plain text is advantageous for tracking changes. Though it is possible to implement version control in WYSIWYG editors, plain texts like LaTeX files occupies less space and easy to use.</p> <p>In addition, managing and compiling references is much easier in LaTeX, comparing to the word processors. For style, just changing the name is often enough and handy when you switch between journals.</p>"},{"location":"01_why-latex/#what-is-git","title":"What is Git?","text":"<p>Git is a version control system. It keeps tracks of the changes you made in text files. Such a system is crucial for dealing with codes. A detailed account of what is git and how it can be used is found in this link. When it is implemented in a LaTeX document, multiple people can work on the same document without distracting others thought and flow. Further, you can track back to any changes and can switch between the branches and versions.</p>"},{"location":"01_why-latex/#what-is-github","title":"What is Github?","text":"<p>Github is a (now) Microsoft backed company that offer developers to create, store, manage and distribute their codes. It is like a user interface with cloud-syncing options for git. You can store any number of repositories either private or public in Github. This feature allows users to create private repositories and share the code with certain people. There are other options like bitbucket or AWS EC2 Instances and if you can, it is possible to build your own git server.</p>"},{"location":"02_about/","title":"About the project","text":"<p>Details about the project</p>"}]}